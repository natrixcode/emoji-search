var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import { useContext } from 'react';
import propTypes from 'prop-types';
import DataContext from './DataContext';
function Emoji(_a) {
    var { name } = _a, props = __rest(_a, ["name"]);
    const data = useContext(DataContext);
    const url = data[name];
    if (!url) {
        console.warn(`Emoji ${name}'s URL could not be found.`);
    }
    return (_jsx("img", Object.assign({ src: url, alt: name, "aria-label": name }, props)));
}
Emoji.propTypes = {
    name: propTypes.string.isRequired,
};
export default Emoji;
//# sourceMappingURL=Emoji.js.map